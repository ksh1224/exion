### This file was generated by Nexus Schema
### Do not make changes to this file directly


scalar Auth

type AuthPayload {
  token: String!
  user: User!
}

type Bookmark {
  shootingId: Int!
  userId: Int!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

scalar DateTime

scalar Gender

type Mutation {
  addBookmark(shootingId: Int!): Bookmark!
  addSchedule(shootingId: Int!): Schedule!
  removeBookmark(shootingId: Int!): Bookmark!
  removeSchedule(scheduleId: Int!): Schedule!
  signInPhoneNumber(password: String!, phoneNumber: String!): AuthPayload!
  signUp(user: UserCreateInput): User!
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Profile {
  authType: Profile_authType
  socialId: String
}

enum Profile_authType {
  apple
  email
  facebook
  google
}

type Query {
  bookmarkShootings(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): ShootingConnection!

  """Fetch current user profile when authenticated."""
  me: User
  schedules(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): ScheduleConnection!
  selectShooting(shootingId: Int!): Shooting
  shootings(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
    searchShooting: SearchShootingInput
  ): ShootingConnection!
  users(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
    searchText: String
  ): UserConnection!
}

type Schedule {
  id: Int!
  shootingId: Int!
  step: Step!
  userId: Int!
}

type ScheduleConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ScheduleEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type ScheduleEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Schedule!
}

input SearchShootingInput {
  endAt: Date
  startAt: Date
  title: String
}

type Shooting {
  content: String
  createdAt: DateTime
  deletedAt: DateTime
  gender: User_gender
  id: Int!
  isDyeing: Boolean
  isGlasses: Boolean
  isTattoo: Boolean
  maxHeight: Int
  maxWeight: Int
  meetingPlace: String
  meetingTime: DateTime
  minHeight: Int
  minWeight: Int
  producer: String
  shootingEndAt: DateTime
  shootingStartAt: DateTime
  title: String
  updatedAt: DateTime
  wage: Int
}

type ShootingConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ShootingEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type ShootingEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Shooting!
}

scalar Step

type User {
  birthday: DateTime
  createdAt: DateTime
  deletedAt: DateTime
  gender: User_gender
  height: Int
  id: Int!
  isDyeing: Boolean
  isGlasses: Boolean
  isTattoo: Boolean
  name: String
  password: String
  phoneNumber: String
  photoURL: String
  photoURL2: String
  profile: Profile
  updatedAt: DateTime
  weight: Int
}

enum User_gender {
  female
  male
}

type UserConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [UserEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

input UserCreateInput {
  birthday: Date
  gender: Gender
  height: Int
  isDyeing: Boolean
  isGlasses: Boolean
  isTattoo: Boolean
  name: String
  password: String!
  phoneNumber: String!
  photoURL: String
  photoURL2: String
  weight: Int
}

type UserEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: User!
}

input UserUpdateInput {
  birthday: Date
  gender: Gender
  height: Int
  isDyeing: Boolean
  isGlasses: Boolean
  isTattoo: Boolean
  name: String
  phoneNumber: String
  photoURL: String
  photoURL2: String
  weight: Int
}
